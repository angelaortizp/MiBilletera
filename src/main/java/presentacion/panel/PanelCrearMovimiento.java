/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.panel;

import logica.entidades.CategoriaMovimiento;
import logica.entidades.Cuenta;
import logica.entidades.TipoCategoria;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import presentacion.Eventos;
import presentacion.Modelo;

/**
 *
 * @author rfcas
 */
public class PanelCrearMovimiento extends javax.swing.JPanel {

    private Modelo modelo;
    private ControladorCrearMovimiento controlador;

    private Cuenta cuenta;
    private ComboBoxModel tipoCategoriaModel;
    private ComboBoxModel categoriaModel;
    private ComboBoxModel cuentaModel;

    /**
     * Creates new form PanelCrearMovimiento
     */
    public PanelCrearMovimiento(Modelo modelo) {
        super();
        this.controlador = new ControladorCrearMovimiento(this);
        this.modelo = modelo;
        initModels();
        initComponents();
        this.jComboBoxTipoCategoria.setSelectedIndex(0);
    }

    private void initModels() {
        this.tipoCategoriaModel = new TipoCategoriaModel(modelo);
        this.categoriaModel = new CategoriaModel(modelo);
        this.cuentaModel = new CuentaModel(modelo, this.cuenta);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jComboBoxTipoCategoria = new javax.swing.JComboBox<>();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jComboBoxCuenta = new javax.swing.JComboBox<>();
        jTextFieldValor = new javax.swing.JTextField();
        jButtonCrearMovimiento = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(0, 6, 5, 5));

        jComboBoxTipoCategoria.setModel(this.tipoCategoriaModel);
        jComboBoxTipoCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));
        add(jComboBoxTipoCategoria);

        jComboBoxCategoria.setEditable(true);
        jComboBoxCategoria.setModel(this.categoriaModel);
        jComboBoxCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Categoria"));
        jComboBoxTipoCategoria.addActionListener((CategoriaModel) categoriaModel);
        jComboBoxCategoria.addActionListener(controlador);
        add(jComboBoxCategoria);

        jTextFieldDescripcion.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripci√≥n"));
        add(jTextFieldDescripcion);

        jComboBoxCuenta.setModel(this.cuentaModel);
        jComboBoxCuenta.setBorder(javax.swing.BorderFactory.createTitledBorder("Destino"));
        jComboBoxTipoCategoria.addActionListener((CuentaModel) cuentaModel);
        add(jComboBoxCuenta);

        jTextFieldValor.setBorder(javax.swing.BorderFactory.createTitledBorder("Valor"));
        add(jTextFieldValor);

        jButtonCrearMovimiento.setText("Crear");
        jButtonCrearMovimiento.setActionCommand(Eventos.CREAR_MOVIMIENTO.toString());
        jButtonCrearMovimiento.addActionListener(controlador);
        add(jButtonCrearMovimiento);
    }// </editor-fold>


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCrearMovimiento;
    private javax.swing.JComboBox<CategoriaMovimiento> jComboBoxCategoria;
    private javax.swing.JComboBox<Cuenta> jComboBoxCuenta;
    private javax.swing.JComboBox<TipoCategoria> jComboBoxTipoCategoria;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldValor;
    // End of variables declaration//GEN-END:variables

    public void setCuenta(Cuenta cuenta) {
        this.cuenta = cuenta;
    }

    public Cuenta getCuenta() {
        return this.cuenta;
    }

    public ComboBoxModel getCuentaModel() {
        return cuentaModel;
    }

    public void setCuentaModel(ComboBoxModel cuentaModel) {
        this.cuentaModel = cuentaModel;
    }

    public JComboBox<CategoriaMovimiento> getjComboBoxCategoria() {
        return jComboBoxCategoria;
    }

    public void setjComboBoxCategoria(JComboBox<CategoriaMovimiento> jComboBoxCategoria) {
        this.jComboBoxCategoria = jComboBoxCategoria;
    }

    public JComboBox<Cuenta> getjComboBoxCuenta() {
        return jComboBoxCuenta;
    }

    public void setjComboBoxCuenta(JComboBox<Cuenta> jComboBoxCuenta) {
        this.jComboBoxCuenta = jComboBoxCuenta;
    }

    public JComboBox<TipoCategoria> getjComboBoxTipoCategoria() {
        return jComboBoxTipoCategoria;
    }

    public void setjComboBoxTipoCategoria(JComboBox<TipoCategoria> jComboBoxTipoCategoria) {
        this.jComboBoxTipoCategoria = jComboBoxTipoCategoria;
    }

    public JTextField getjTextFieldDescripcion() {
        return jTextFieldDescripcion;
    }

    public void setjTextFieldDescripcion(JTextField jTextFieldDescripcion) {
        this.jTextFieldDescripcion = jTextFieldDescripcion;
    }

    public JTextField getjTextFieldValor() {
        return jTextFieldValor;
    }

    public void setjTextFieldValor(JTextField jTextFieldValor) {
        this.jTextFieldValor = jTextFieldValor;
    }

    public Modelo getModelo() {
        return modelo;
    }

    public ControladorCrearMovimiento getControlador() {
        return controlador;
    }
}

class TipoCategoriaModel extends DefaultComboBoxModel<TipoCategoria> {

    private Modelo modelo;

    public TipoCategoriaModel(Modelo modelo) {
        super(modelo.getListadoTipoCategoria().toArray(new TipoCategoria[0]));
        this.modelo = modelo;
    }

}

class CategoriaModel extends DefaultComboBoxModel<CategoriaMovimiento> implements ActionListener {

    private Modelo modelo;

    public CategoriaModel(Modelo modelo) {
        super();
        this.modelo = modelo;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JComboBox jComboBoxTipoCategoria = (JComboBox) e.getSource();
        TipoCategoria tipoCategoria = (TipoCategoria) jComboBoxTipoCategoria.getSelectedItem();
        //
        this.removeAllElements();
        for (CategoriaMovimiento categoriaMovimiento : this.modelo.getListadoCategoriaMovimiento(tipoCategoria)) {
            this.addElement(categoriaMovimiento);
        }
    }

}

class CuentaModel extends DefaultComboBoxModel<Cuenta> implements ActionListener {

    private Modelo modelo;
    private Cuenta cuenta;

    public CuentaModel(Modelo modelo, Cuenta cuenta) {
        super();
        this.modelo = modelo;
    }

    public Cuenta getCuenta() {
        return cuenta;
    }

    public void setCuenta(Cuenta cuenta) {
        this.cuenta = cuenta;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JComboBox jComboBoxTipoCategoria = (JComboBox) e.getSource();
        TipoCategoria tipoCategoria = (TipoCategoria) jComboBoxTipoCategoria.getSelectedItem();
        //
        this.removeAllElements();
        if (tipoCategoria.getId() == TipoCategoria.TRANSFERENCIA) {
            for (Cuenta cuenta : this.modelo.getListadoCuentas()) {
                if (!cuenta.getId().equals(this.cuenta)) {
                    this.addElement(cuenta);
                }
            }
        }
    }

}
