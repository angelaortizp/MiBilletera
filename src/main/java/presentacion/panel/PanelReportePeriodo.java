/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.panel;

import logica.entidades.Movimiento;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import presentacion.Eventos;
import presentacion.Modelo;

/**
 *
 * @author rfcas
 */
public class PanelReportePeriodo extends javax.swing.JPanel {

    private Modelo modelo;
    private ControladorReportePeriodo controlador;

    private TableModel reporteModel;

    /**
     * Creates new form PanelReportePeriodo
     */
    public PanelReportePeriodo(Modelo modelo) {
        super();
        this.controlador = new ControladorReportePeriodo(this);
        this.modelo = modelo;
        initModels();
        initComponents();
    }

    public void refrescar(Date fechaInicial, Date fechaFinal) {
        ((ReportePeriodoTableModel) this.reporteModel).setFechas(fechaInicial, fechaFinal);
    }

    private void initModels() {
        this.reporteModel = new ReportePeriodoTableModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldFechaInicial = new javax.swing.JTextField();
        jTextFieldFechaFinal = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelGraficoLineas = new PanelGraficoLineas();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jTextFieldFechaInicial.setColumns(10);
        jPanel1.add(jTextFieldFechaInicial);

        jTextFieldFechaFinal.setColumns(10);
        jPanel1.add(jTextFieldFechaFinal);

        jButton1.setText("Calcular");
        jButton1.setActionCommand(Eventos.CALCULAR_REPORTE_PERIODO.toString());
        jButton1.addActionListener(controlador);
        jPanel1.add(jButton1);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        jTable1.setModel(this.reporteModel);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jPanel2.add(jPanelGraficoLineas);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelGraficoLineas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldFechaFinal;
    private javax.swing.JTextField jTextFieldFechaInicial;
    // End of variables declaration//GEN-END:variables

    public JTextField getjTextFieldFechaFinal() {
        return jTextFieldFechaFinal;
    }

    public JTextField getjTextFieldFechaInicial() {
        return jTextFieldFechaInicial;
    }

    public JPanel getjPanelGraficoLineas() {
        return jPanelGraficoLineas;
    }

    public Modelo getModelo() {
        return modelo;
    }

    public ControladorReportePeriodo getControlador() {
        return controlador;
    }

}

class ReportePeriodoTableModel extends AbstractTableModel {

    private static final String[] COLUMNAS = new String[]{"#", "Cuenta", "Tipo", "Categoria", "Fecha", "Descripci√≥n", "Valor COP"};

    private Modelo modelo;

    private Date fechaInicial;

    private Date fechaFinal;

    private List<Movimiento> movimientos;

    public ReportePeriodoTableModel(Modelo modelo) {
        super();
        this.modelo = modelo;
        this.fechaInicial = null;
        this.fechaFinal = null;
        this.movimientos = null;
    }

    public void setFechas(Date fechaInicial, Date fechaFinal) {
        this.fechaInicial = fechaInicial;
        this.fechaFinal = fechaFinal;
        //
        this.fireTableDataChanged();
    }

    private List<Movimiento> getMovimientos() {
        if (this.movimientos == null) {
            this.movimientos = modelo.obtenerMovimientoPorPeriodo(this.fechaInicial, this.fechaFinal);
        }
        return this.movimientos;
    }

    @Override
    public int getRowCount() {
        return this.getMovimientos().size();
    }

    @Override
    public int getColumnCount() {
        return 7;
    }

    @Override
    public String getColumnName(int col) {
        return ReportePeriodoTableModel.COLUMNAS[col];
    }

    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        Movimiento movimiento = this.getMovimientos().get(rowIndex);
        switch (columnIndex) {
            case 0: {
                NumberFormat numberFormat = new DecimalFormat("0000000");
                return numberFormat.format(movimiento.getId());
            }
            case 1:
                return movimiento.getCuenta().getNombre();
            case 2:
                return movimiento.getIdCategoriaMovimiento().getIdTipoCategoria().getNombre();
            case 3:
                return movimiento.getIdCategoriaMovimiento().getNombre();
            case 4: {
                return movimiento.getFecha();
            }
            case 5:
                return movimiento.getDescripcion();
            case 6: {
                NumberFormat numberFormat = new DecimalFormat("0.##");
                return numberFormat.format(movimiento.getValor());
            }
            default:
                return null;
        }
    }

    @Override
    public void fireTableDataChanged() {
        this.movimientos = null;
        super.fireTableDataChanged(); //To change body of generated methods, choose Tools | Templates.
    }

}
